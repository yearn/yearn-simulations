name: Build and Deploy
on:
  workflow_dispatch:
  push:
    branches:
          - main
          - master
    
jobs:
  build_and_upload_container:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ProductionYearnSimulationsInfraStackSimulatorBotTaskDefinitionC9C3D960 --query taskDefinition > task-definition.json

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: productionsharedstack06a6756f-simscheduledtasksrepository0bbaad80-stmcnjmehogz
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: SimulatorBotContainer
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          cluster: ProductionYearnSimulationsInfraStack5A54351E-YearnSimulationsCluster09747959-3WNGOSWH0WUO
          service: ProductionYearnSimulationsInfraStack5A54351E-SimulatorBotService0D0A55C9-DU8lFpSH15yz
          wait-for-service-stability: true

      - name: Trigger Infrastructure Deploy
        run: |
          curl -H "Authorization: token ${{ secrets.YEARN_SIMULATIONS_INFRA_GITHUB_TOKEN }}" -H 'Accept: application/vnd.github.everest-preview+json' "https://api.github.com/repos/numan/yearn-simulations-infra/dispatches" -d '{"event_type": "deploy_infra", "client_payload": {"SHA": "${{ github.sha }}"}}'